package com.company;

public class Vector3DProcessor {
    public static Vector3D sum(Vector3D v1, Vector3D v2){
        double x = v1.getX()+v2.getX();
        double y = v1.getY()+v2.getY();
        double z = v1.getZ()+v2.getZ();
        return new Vector3D(x,y,z);
    }
    public static Vector3D difference(Vector3D v1, Vector3D v2){
        double x = v1.getX()-v2.getX();
        double y = v1.getY()-v2.getY();
        double z = v1.getZ()-v2.getZ();
        return new Vector3D(x,y,z);
    }
    public static double scalarProduct(Vector3D v1, Vector3D v2){
        return v1.getX()* v2.getX() + v1.getY()* v2.getY() + v1.getZ()* v2.getZ();
    }
    public static Vector3D vectorProduct(Vector3D v1, Vector3D v2){
        double x = v1.getY()*v2.getZ() - v1.getZ()*v2.getY();
        double y = v1.getZ()*v2.getX() - v1.getX()*v2.getZ();
        double z = v1.getX()*v2.getY() - v1.getY()*v2.getX();
        return new Vector3D(x,y,z);
    }
    public static boolean areCollinear(Vector3D v1, Vector3D v2){
        Vector3D v0 = new Vector3D();
        Vector3D v = vectorProduct(v1,v2);
        return v.equals(v0);
    }

    public static void main(String args[]){
        Vector3D v1 = new Vector3D(1,-2,3);
        Vector3D v2 = new Vector3D(4,-1,4);
        Vector3DProcessor.sum(v1,v2).print();
        Vector3DProcessor.difference(v1,v2).print();
        System.out.println(Vector3DProcessor.scalarProduct(v1,v2));
        Vector3DProcessor.vectorProduct(v1,v2).print();
        System.out.println(Vector3DProcessor.areCollinear(v1,v2));
    }
}
